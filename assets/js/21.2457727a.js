(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{424:function(t,e,a){"use strict";a.r(e);var s=a(26),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"vuejs中开发知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuejs中开发知识"}},[t._v("#")]),t._v(" Vuejs中开发知识")]),t._v(" "),a("h4",{attrs:{id:"组件中-当组件挂载-mounted-之后-可以通过this-el获取到组件的根元素-等同于document-getelementbyid-this-ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件中-当组件挂载-mounted-之后-可以通过this-el获取到组件的根元素-等同于document-getelementbyid-this-ref"}},[t._v("#")]),t._v(" 组件中，当组件挂载(mounted)之后，可以通过"),a("code",[t._v("this.$el")]),t._v("获取到组件的根元素，等同于"),a("code",[t._v("document.getElementById()")]),t._v(","),a("code",[t._v("this.$ref")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template>\n  <div style="width: 175px; height: 175px;"></div>\n</template>\n<script>\nexport default {\n  ...\n  methods: {\n    initChart (){\n      this.myChart = echarts.init(this.$el) // 此处获取到根div\n    }\n  }\n  ...\n<\/script>\n')])])]),a("h4",{attrs:{id:"监听-route"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监听-route"}},[t._v("#")]),t._v(" 监听$route")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("watch: {\n  '$route': { // watcher值是包含选项的对象\n    immediate: true, // 选项，立即以表达式的当前值触发回调\n    handler (to) {\n      if (to.name === 'monitor') {\n        this.getData()\n      }\n    }\n  }\n},\n")])])]),a("h4",{attrs:{id:"vue-router路由组件传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router路由组件传参"}},[t._v("#")]),t._v(" vue-router路由组件传参")]),t._v(" "),a("p",[t._v("在配置router路由的时候，每一个路由配置，都可以设置一个参数"),a("code",[t._v("props")]),t._v("，用于路由向组件传参，")]),t._v(" "),a("p",[t._v("例如，在路由中进行如下配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const router = new VueRouter({\n  routes: [\n    { path: '/user/:id', component: User, props: true }\n  ]\n})\n")])])]),a("p",[t._v("结果，在组件"),a("code",[t._v("User")]),t._v("中，就可以通过"),a("code",[t._v("props: ['id']")]),t._v("这样的语法来访问这个id参数，此时的id与父子组件传递props是一样的使用（功能等同于"),a("code",[t._v("$route.params.id")]),t._v("，优势是实现了组件和路由的解耦）")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// route.js\n{path: 'analysis/:pipline/:device/:time, props: true, component: load('analysis/layout')}\n//layout.vue\nprops: ['pipline', 'device', 'time']\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);